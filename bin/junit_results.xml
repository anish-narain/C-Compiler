<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Integration test">
<testcase name="compiler_tests/_example/example.c">
</testcase>
<testcase name="compiler_tests/array/declare_global.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_array_declare_global.compiler.stderr.log and ./bin/output/compiler_tests_array_declare_global.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_array_declare_global.compiler.stderr.log and ./bin/output/compiler_tests_array_declare_global.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/array/declare_local.c">
</testcase>
<testcase name="compiler_tests/array/index_constant.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_array_index_constant.compiler.stderr.log and ./bin/output/compiler_tests_array_index_constant.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_array_index_constant.compiler.stderr.log and ./bin/output/compiler_tests_array_index_constant.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/array/index_expression.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_array_index_expression.compiler.stderr.log and ./bin/output/compiler_tests_array_index_expression.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_array_index_expression.compiler.stderr.log and ./bin/output/compiler_tests_array_index_expression.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/array/index_variable.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_array_index_variable.compiler.stderr.log and ./bin/output/compiler_tests_array_index_variable.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_array_index_variable.compiler.stderr.log and ./bin/output/compiler_tests_array_index_variable.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/control_flow/for_multiple.c">
</testcase>
<testcase name="compiler_tests/control_flow/for_one.c">
</testcase>
<testcase name="compiler_tests/control_flow/for_zero_v1.c">
</testcase>
<testcase name="compiler_tests/control_flow/for_zero_v2.c">
</testcase>
<testcase name="compiler_tests/control_flow/if_else_false.c">
</testcase>
<testcase name="compiler_tests/control_flow/if_else_true.c">
</testcase>
<testcase name="compiler_tests/control_flow/if_false.c">
</testcase>
<testcase name="compiler_tests/control_flow/if_true.c">
</testcase>
<testcase name="compiler_tests/control_flow/sequence.c">
</testcase>
<testcase name="compiler_tests/control_flow/while_multiple.c">
</testcase>
<testcase name="compiler_tests/control_flow/while_once.c">
</testcase>
<testcase name="compiler_tests/control_flow/while_zero.c">
</testcase>
<testcase name="compiler_tests/default/test_ADD0.c">
</testcase>
<testcase name="compiler_tests/default/test_ADD1.c">
</testcase>
<testcase name="compiler_tests/default/test_CALL.c">
</testcase>
<testcase name="compiler_tests/default/test_LOCAL.c">
</testcase>
<testcase name="compiler_tests/default/test_RETURN.c">
</testcase>
<testcase name="compiler_tests/float/add_double.c">
</testcase>
<testcase name="compiler_tests/float/add.c">
</testcase>
<testcase name="compiler_tests/float/add_mul.c">
</testcase>
<testcase name="compiler_tests/float/mul_add.c">
</testcase>
<testcase name="compiler_tests/float/mul_double.c">
</testcase>
<testcase name="compiler_tests/float/mul.c">
</testcase>
<testcase name="compiler_tests/float/pow.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_float_pow.compiler.stderr.log and ./bin/output/compiler_tests_float_pow.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_float_pow.compiler.stderr.log and ./bin/output/compiler_tests_float_pow.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/functions/call_constant_external.c">
</testcase>
<testcase name="compiler_tests/functions/call_constant_internal.c">
</testcase>
<testcase name="compiler_tests/functions/call_five_args_external.c">
</testcase>
<testcase name="compiler_tests/functions/call_five_args_internal.c">
</testcase>
<testcase name="compiler_tests/functions/call_identity_external.c">
</testcase>
<testcase name="compiler_tests/functions/call_identity_internal.c">
</testcase>
<testcase name="compiler_tests/functions/call_mutual_recursive.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_functions_call_mutual_recursive.compiler.stderr.log and ./bin/output/compiler_tests_functions_call_mutual_recursive.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_functions_call_mutual_recursive.compiler.stderr.log and ./bin/output/compiler_tests_functions_call_mutual_recursive.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/functions/call_recursive_internal.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/functions/call_two_args_external.c">
</testcase>
<testcase name="compiler_tests/functions/call_two_args_internal.c">
</testcase>
<testcase name="compiler_tests/integer/add.c">
</testcase>
<testcase name="compiler_tests/integer/bitwise_and.c">
</testcase>
<testcase name="compiler_tests/integer/bitwise_or.c">
</testcase>
<testcase name="compiler_tests/integer/bitwise_xor.c">
</testcase>
<testcase name="compiler_tests/integer/div.c">
</testcase>
<testcase name="compiler_tests/integer/equal.c">
</testcase>
<testcase name="compiler_tests/integer/less_than.c">
</testcase>
<testcase name="compiler_tests/integer/less_than_equal.c">
</testcase>
<testcase name="compiler_tests/integer/logical_and.c">
</testcase>
<testcase name="compiler_tests/integer/logical_or.c">
</testcase>
<testcase name="compiler_tests/integer/mul.c">
</testcase>
<testcase name="compiler_tests/integer/sub.c">
</testcase>
<testcase name="compiler_tests/local_var/constant_initialiser.c">
</testcase>
<testcase name="compiler_tests/local_var/dual_var.c">
</testcase>
<testcase name="compiler_tests/local_var/expression_initialiser.c">
</testcase>
<testcase name="compiler_tests/local_var/identity.c">
</testcase>
<testcase name="compiler_tests/local_var/return_constant.c">
</testcase>
<testcase name="compiler_tests/local_var/scoped_var.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/local_var/single_var.c">
</testcase>
<testcase name="compiler_tests/misc/enum1.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_misc_enum1.compiler.stderr.log and ./bin/output/compiler_tests_misc_enum1.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_misc_enum1.compiler.stderr.log and ./bin/output/compiler_tests_misc_enum1.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/misc/enum2.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_misc_enum2.compiler.stderr.log and ./bin/output/compiler_tests_misc_enum2.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_misc_enum2.compiler.stderr.log and ./bin/output/compiler_tests_misc_enum2.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/misc/switch1.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_misc_switch1.compiler.stderr.log and ./bin/output/compiler_tests_misc_switch1.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_misc_switch1.compiler.stderr.log and ./bin/output/compiler_tests_misc_switch1.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/misc/switch2.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_misc_switch2.compiler.stderr.log and ./bin/output/compiler_tests_misc_switch2.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_misc_switch2.compiler.stderr.log and ./bin/output/compiler_tests_misc_switch2.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/misc/typedef1.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_misc_typedef1.compiler.stderr.log and ./bin/output/compiler_tests_misc_typedef1.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_misc_typedef1.compiler.stderr.log and ./bin/output/compiler_tests_misc_typedef1.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/misc/typedef2.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_misc_typedef2.compiler.stderr.log and ./bin/output/compiler_tests_misc_typedef2.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_misc_typedef2.compiler.stderr.log and ./bin/output/compiler_tests_misc_typedef2.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/pointer/addressof.c">
</testcase>
<testcase name="compiler_tests/pointer/arithmetic.c">
</testcase>
<testcase name="compiler_tests/pointer/assign.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_pointer_assign.compiler.stderr.log and ./bin/output/compiler_tests_pointer_assign.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_pointer_assign.compiler.stderr.log and ./bin/output/compiler_tests_pointer_assign.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/pointer/dereference.c">
</testcase>
<testcase name="compiler_tests/pointer/index.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/programs/fibonacci.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_programs_fibonacci.compiler.stderr.log and ./bin/output/compiler_tests_programs_fibonacci.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_programs_fibonacci.compiler.stderr.log and ./bin/output/compiler_tests_programs_fibonacci.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/programs/multiply.c">
</testcase>
<testcase name="compiler_tests/programs/sqrt.c">
</testcase>
<testcase name="compiler_tests/strings/chliteral.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/strings/escaped.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/strings/literal.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/strings/puts.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/strings/search.c">
<error type="error" message="Fail: simulation did not exit with exit-code 0">Fail: simulation did not exit with exit-code 0</error>
</testcase>
<testcase name="compiler_tests/struct/sizeof.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_struct_sizeof.compiler.stderr.log and ./bin/output/compiler_tests_struct_sizeof.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_struct_sizeof.compiler.stderr.log and ./bin/output/compiler_tests_struct_sizeof.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/struct/struct_inst.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_struct_struct_inst.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_inst.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_struct_struct_inst.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_inst.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/struct/struct_member_get.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_struct_struct_member_get.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_member_get.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_struct_struct_member_get.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_member_get.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/struct/struct_member_set.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_struct_struct_member_set.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_member_set.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_struct_struct_member_set.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_member_set.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/struct/struct_two_members.c">
<error type="error" message="Fail: see ./bin/output/compiler_tests_struct_struct_two_members.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_two_members.compiler.stdout.log">Fail: see ./bin/output/compiler_tests_struct_struct_two_members.compiler.stderr.log and ./bin/output/compiler_tests_struct_struct_two_members.compiler.stdout.log</error>
</testcase>
<testcase name="compiler_tests/types/sizeof_char_inst.c">
</testcase>
<testcase name="compiler_tests/types/sizeof_char_type.c">
</testcase>
<testcase name="compiler_tests/types/sizeof_int_inst.c">
</testcase>
<testcase name="compiler_tests/types/sizeof_int_type.c">
</testcase>
<testcase name="compiler_tests/types/unsigned.c">
</testcase>
</testsuite>
